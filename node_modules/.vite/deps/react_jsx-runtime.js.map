{
  "version": 3,
  "sources": ["../../react/cjs/react-jsx-runtime.production.js", "../../react/jsx-runtime.js"],
  "sourcesContent": ["/**\r\n * @license React\r\n * react-jsx-runtime.production.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\"use strict\";\r\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\r\nfunction jsxProd(type, config, maybeKey) {\r\n  var key = null;\r\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\r\n  void 0 !== config.key && (key = \"\" + config.key);\r\n  if (\"key\" in config) {\r\n    maybeKey = {};\r\n    for (var propName in config)\r\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\r\n  } else maybeKey = config;\r\n  config = maybeKey.ref;\r\n  return {\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n    type: type,\r\n    key: key,\r\n    ref: void 0 !== config ? config : null,\r\n    props: maybeKey\r\n  };\r\n}\r\nexports.Fragment = REACT_FRAGMENT_TYPE;\r\nexports.jsx = jsxProd;\r\nexports.jsxs = jsxProd;\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAWA,QAAI,qBAAqB,OAAO,IAAI,4BAA4B;AAAhE,QACE,sBAAsB,OAAO,IAAI,gBAAgB;AACnD,aAAS,QAAQ,MAAM,QAAQ,UAAU;AACvC,UAAI,MAAM;AACV,iBAAW,aAAa,MAAM,KAAK;AACnC,iBAAW,OAAO,QAAQ,MAAM,KAAK,OAAO;AAC5C,UAAI,SAAS,QAAQ;AACnB,mBAAW,CAAC;AACZ,iBAAS,YAAY;AACnB,oBAAU,aAAa,SAAS,QAAQ,IAAI,OAAO,QAAQ;AAAA,MAC/D,MAAO,YAAW;AAClB,eAAS,SAAS;AAClB,aAAO;AAAA,QACL,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA,KAAK,WAAW,SAAS,SAAS;AAAA,QAClC,OAAO;AAAA,MACT;AAAA,IACF;AACA,YAAQ,WAAW;AACnB,YAAQ,MAAM;AACd,YAAQ,OAAO;AAAA;AAAA;;;ACjCf;AAAA;AAEA,QAAI,MAAuC;AACzC,aAAO,UAAU;AAAA,IACnB,OAAO;AACL,aAAO,UAAU;AAAA,IACnB;AAAA;AAAA;",
  "names": []
}
